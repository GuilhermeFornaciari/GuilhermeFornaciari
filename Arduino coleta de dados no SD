//Inclusão das bibliotecas necessárias
#include "RTClib.h" 
#include <SPI.h>
#include <SD.h>
#include "EmonLib.h"

File myFile;
RTC_DS3231 rtc; //Objeto do tipo RTC_ds3231
 
const int chipSelect = 10; // Porta de comunicação com o SD Card
// Variaveis usadas pelo SCT - 013 
EnergyMonitor SCT013;
#define Tamanho 60  // Periodo de envio dos dados em segundos
int pinSCT = A0;   //Pino analógico conectado ao SCT-013
int tensao = 220;
//Dados para serem enviados
String payload = "";
void setup(){
  SCT013.current(pinSCT, 60.606);
  Serial.begin(9600); 
  if(! rtc.begin()) { // se não encontrar o rtc:
    Serial.println("DS3231 não encontrado"); 
    while(1); //SEMPRE ENTRE NO LOOP
  }
    Serial.println("DS3231 OK!"); 
    rtc.adjust(DateTime(F(__DATE__), F(__TIME__))); //Atualiza a data e hora do rtc
  
  delay(100); 
    Serial.print("Initializing SD card...");
 
  if (!SD.begin()) {
    Serial.println("initialization failed!");
    return;
  }
  Serial.println("initialization done.");
}
 
void loop () {
   DateTime now = rtc.now(); //CHAMADA DE FUNÇÃO
   // Coleta de Dados para a gravação 
   float WattsM = 0;
   float SomaM = 0;
   float Media = 0;
   String data = "";
   String hora = "";
   String dados = "";
   // Cria os dados para a publicação na planilha em uma lista de inteiros
   for (int i=0; i< Tamanho; i++){ 
    double Amp = SCT013.calcIrms(1480);   // Calcula o valor da Corrente
    delay(1000);
    SomaM = SomaM + Amp;
   }
   Media = SomaM / Tamanho; //calcula média
   WattsM =  Media * tensao;
   
   myFile = SD.open("test.txt", FILE_WRITE);
   // Se abriu tranquilamente, continua o processo:
   if (myFile) {
     Serial.println("Escrevendo para a TXT:");
    //Montar todas informações em uma unica string
    //data:         dia                      mes                     ano
    data = String(now.day()) + "/" + String(now.month()) + "/" + String(now.year());
    //hora:           hora                 minuto                    segundo
    hora = String(now.hour()) + ":" + String(now.minute()) + ":" + String(now.second());
    dados= String(Media) + "," + String(WattsM);

    payload = data + "," + hora + "," + dados;
    //envia os dados para o SD
    myFile.println(payload);
    Serial.println(payload);
    // fecha o arquivo
    myFile.close();
    Serial.println("Feito!!!");
    }else {
      // Se dar erro ao abrir o arquvio:
      Serial.println("erro ao abrir o arquivo");
    }
    
    




    //Proxima linha
    Serial.println(); 
    delay(1000); //INTERVALO DE 1 SEGUNDO
}
